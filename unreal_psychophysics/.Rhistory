spaced_event_indexes[1:num_event_indexes] <- event_indices[1:num_event_indexes]
current_index <- num_event_indexes + 1
# Space out the remaining event indexes
for (i in (num_event_indexes + 1):(total_length - num_event_indexes)) {
current_index <- current_index + desired_spacing
# Check if the index exceeds the length of the vector
if (current_index > (total_length - num_event_indexes)) {
current_index <- current_index - (total_length - num_event_indexes)
}
spaced_event_indexes[i] <- shuffled_non_event[current_index]
}
return(spaced_event_indexes)
}
# Example usage:
set.seed(123)  # for reproducibility
total_length <- 63
num_event_indexes <- 21
event_to_space <- 4444
desired_spacing <- 3
event_indexes <- randomly_space_event_indexes_fixed_length(total_length, num_event_indexes, event_to_space, desired_spacing)
# View the result
print(event_indexes)
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
warnings()
study=readline("Study folder name:")
study=readline("Study folder name:")
sub_n = readline("Subject number:")
attempt= readline(prompt = "Fitting attempt number:")
library(here)
source(here("preprocessing.R"))
source(here("name_conditions_and_domains.R"))
source(here("post_fit_adjustments.R"))
source(here("threshold_fix.R"))
source(here("shift_conditions.R"))
source(here("plot_staircase.R"))
source(here("plot_staircase_unity.R"))
source(here("repeat_list.R"))
source(here("make_plots.R"))
source(here("load_thresholds.R"))
source(here("load_thresholds_fmri.R"))
sub_folder_name<-gsub(" ","",paste("sub_",sub_n))
subject_folder<-here("Studies",study,sub_folder_name)
results_folder_name<-gsub(" ","",paste("results_sub_",sub_n,'_attempt_',as.character(attempt)))
results_folder<-here("Studies",study,sub_folder_name,results_folder_name)
input_folder_name<- gsub(" ","",paste("unreal_input_sub_",sub_n,'_attempt_',as.character(attempt)))
unreal_input_folder<- gsub(" ","",paste(results_folder,"/",input_folder_name))
#list of folder names
folder_names<-list(sub_folder_name,results_folder_name,input_folder_name)
sub_folder_name<-unlist(folder_names)[1]
results_folder_name<-unlist(folder_names)[2]
input_folder_name<-unlist(folder_names)[3]
#load thresholds csv: filename+subject, folder path
#set the filename, always take the file called Answers...something...csv
filename_t<-list.files(here("Studies",study,sub_folder_name,results_folder_name), pattern=glob2rx("threshold_values*.csv"))[1]
#read JND output csv filename
thresholds<-import(here("Studies",study,sub_folder_name,results_folder_name,filename_t));
#filename_temp<-list.files(here("unreal_random_temps"), pattern=glob2rx())
#read staircase template csv filename
SCtemplate<-import(here("unreal_random_temps","StaircaseCommands_imaging_template.csv"));
#filter 2nd and 4th levels
thresholds_lvls<-thresholds %>% filter(Level==1|Level==2)
View(thresholds_lvls)
View(SCtemplate)
SCtemplate$initialValue[-1]
SCtemplate$initialValue[-1]<-thresholds_lvls$shifted_threshold
SCtemplate$initialValue<-as.numeric(SCtemplate$initialValue)
#add two right side plant rows
two_plant_rows<-SCtemplate[SCtemplate$Condition=="Plant",]
#make them negative and change the staircase codes to 3812, 3814
two_plant_rows$"#stairCaseSerialID"[1]<-3812
two_plant_rows$"#stairCaseSerialID"[2]<-3814
two_plant_rows$initialValue[1]<-two_plant_rows$initialValue[1]*(-1)
two_plant_rows$initialValue[2]<-two_plant_rows$initialValue[2]*(-1)
#add the two new rows to the SCtemplate
SCtemplate<-rbind(SCtemplate,two_plant_rows)
#remove first column we do not need it
SCtemplate<-SCtemplate[,-1]
filename<-"StaircaseCommands.csv"
export(SCtemplate,here("Experiment","UnrealData","Plans","Unreal",filename),col.names=TRUE)
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
run_unreal_psy()
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/load_thresholds_fmri.R", echo=TRUE)
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("run_unreal_psy.R")
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat('* * * Finished * * *')
cat('* * * * Finished * * * *')
cat('              * * * * Finished * * * *              ')
cat('* * * * * * * * * * * * Finished * * * * * * * * * * * * * * * * ')
cat('* * * * * * * * * * * * * * * * Finished * * * * * * * * * * * * * * * * * * * *')
cat('* * * * * * * * * * * * * * * * The End * * * * * * * * * * * * * * * * * * * *')
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
run_unreal_psy()
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat('\n','* * * * * * * * * * * * * * * * The End * * * * * * * * * * * * * * * * * * * *','\n')
cat('\n','* * * * * * * * * * * * * * * * * * * * The End * * * * * * * * * * * * * * * * * * * * * * * *','\n')
cat('\n','* * * * * * * * * * * * * * * * * * * * * * * * * * * * * The End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *','\n')
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
run_unreal_psy()
cat('\n','\033[31m !!! Bad fits found! \033[0m')
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat("                                                           \033[1;36mMatlab is fitting the data033[0m","\n")
cat("                                                           \033[1;36mMatlab is fitting the data","\n")
cat("                                              \033[1;36mMatlab is fitting the data","\n")
cat("                                             \033[1;36mMatlab is fitting the data","\n")
con_name<-"Grow"
cat("                                                \033[32m Plotting ",con_name," staircase...\033[0m","\n")
cat("                                                \033[35m Plotting ",con_name," Staircase...\033[0m","\n")
cat("                                                \033[39m Plotting ",con_name," Staircase...\033[0m","\n")
cat("                                                \033[333m Plotting ",con_name," Staircase...\033[0m","\n")
cat("                                                \033[32m Plotting ",con_name," Staircase...\033[0m","\n")
cat("                                                \033[33m Plotting ",con_name," Staircase...\033[0m","\n")
cat("                                                \033[32m Plotting ",con_name," Staircase\033[0m","\n")
cat("                                                \033[333m Plotting ",con_name," Staircase\033[0m","\n")
cat("                                                \033[34mStaircase results, Unreal input csv & Training csv have been created\033[0m","\n")
cat(paste("                                                \033[36mSubject",sub_n,"staircases plot 2 done\033[0m"),"\n")
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat("                                                \033[1;32m Thresholds were adjusted033[0m","\n")
cat("                                                \033[1;32m Thresholds were adjusted","033[0m\n")
cat("                                                \033[1;32m Thresholds were adjusted","\n")
cat("                                                Plotting ",con_name," Staircase","\n")
con_name<-"Grow"
cat("                                                Plotting ",con_name," Staircase","\n")
cat("                                                Plotting ",con_name," Staircase","\n")
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat("\033[1;31mThresholds were adjusted","\033[0m\n")
cat("\033[1;34mThresholds were adjusted","\033[0m\n")
cat(paste("\033[34mSubject",sub_n,"staircases plot 2 done\033[0m"),"\n")
sub_n<-"041"
cat(paste("\033[34mSubject",sub_n,"staircases plot 2 done\033[0m"),"\n")
cat(paste("\033[1;34mSubject",sub_n,"staircases plot 1 done\033[0m"),"\n")
cat(paste("\033[1;34mSubject",sub_n,"staircases plot 2 done\033[0m"),"\n")
cat(paste("\n","\033[34mLoaded Unreal random template number:",as.character(sub_n)),"\033[0m\n")
cat(paste("\n","\033[34mLoaded Unreal randomized template number:",as.character(sub_n)),"\033[0m\n")
cat(paste("\n","\033[1;34mLoaded Unreal randomized template number:",as.character(sub_n)),"\033[0m\n")
cat("\033[1;34mStaircase results, Unreal input csv & Training csv have been created\033[0m","\n")
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
cat(paste("\033[1;34mLoaded Unreal randomized template number:",as.character(sub_n)),"\033[0m\n")
sub_n<-"041"
cat(paste("\033[1;34mLoaded Unreal randomized template number:",as.character(sub_n)),"\033[0m\n")
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/repeat_jnd.R", echo=TRUE)
study=readline("Study folder name:")
sub_n = readline("Subject number:")
attempt= readline(prompt = "Fitting attempt number:")
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
library(magicfor)
library(stringi)
library(rio)
library(here)
# sub_n<- readline("Subject number:")
# attempt<- readline(prompt = "Staircase attempt number:");
sub_folder_name<-paste0("sub_",sub_n)
#load the answers csv of the repeated staircases
repeat_file<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("*repeat*.csv"))[1];
list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("*repeat*.csv"))[1];
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
source(here("preprocessing.R"))
source(here("name_conditions_and_domains.R"))
source(here("post_fit_adjustments.R"))
source(here("threshold_fix.R"))
source(here("shift_conditions.R"))
source(here("plot_staircase.R"))
source(here("plot_staircase_unity.R"))
source(here("repeat_list.R"))
source(here("make_plots.R"))
source(here("load_thresholds.R"))
source(here("load_thresholds_fmri.R"))
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/repeat_jnd.R", echo=TRUE)
study=readline("Study folder name:")
sub_n = readline("Subject number:")
attempt= readline(prompt = "Fitting attempt number:")
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
library(magicfor)
library(stringi)
library(rio)
library(here)
sub_folder_name<-paste0("sub_",sub_n)
#load the answers csv of the repeated staircases
repeat_file<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("*repeat*.csv"))[1];
repeat_file
repeat_data<-import(here("Studies",study,sub_folder_name,repeat_file))
View(repeat_data)
unlink(here("Studies",study,sub_folder_name,repeat_file))
#load the previous attempt csv (there should be only one attempt file in the folder)
previous_attempt_file<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1];
previous_attempt_data<-import(here("Studies",study,sub_folder_name,previous_attempt_file))
unlink(here("Studies",study,sub_folder_name,previous_attempt_file))
#make a unique vector of the condition codes used in the repeat TrialNumber column
repeat_codes<-unique(repeat_data$TrialNumber)
#turn all codes into the 3 first digits
repeat_codes<-as.numeric(substr(repeat_codes,1,3))
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
sub_n<-"127"
study
study<-"fmri"
attmept<-1
sub_folder_name<-gsub(" ","",paste("sub_",sub_n))
subject_folder<-here("Studies",study,sub_folder_name)
results_folder_name<-gsub(" ","",paste("results_sub_",sub_n,'_attempt_',as.character(attempt)))
attempt<-1
sub_folder_name<-gsub(" ","",paste("sub_",sub_n))
subject_folder<-here("Studies",study,sub_folder_name)
results_folder_name<-gsub(" ","",paste("results_sub_",sub_n,'_attempt_',as.character(attempt)))
results_folder<-here("Studies",study,sub_folder_name,results_folder_name)
input_folder_name<- gsub(" ","",paste("unreal_input_sub_",sub_n,'_attempt_',as.character(attempt)))
unreal_input_folder<- gsub(" ","",paste(results_folder,"/",input_folder_name))
#list of folder names
folder_names<-list(sub_folder_name,results_folder_name,input_folder_name)
library(matlabr)
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
library(magicfor)
library(stringi)
library(scales)
library(ggpubr)
library(formattable)
library(crayon)
library(rio)
library(here)
#set the filename, always take the file called Answers*
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#read JND output csv filename
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
# save file
file_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
#remove throw away trials (Blocknumber==0)
data<-data[!(data$BlockNumber==0),]
#filter the df so that only staircase rows remain
filter_questions <-data$QuestionID==88
data<-data[filter_questions,]
#filter trials with no answer
data<-data[!(data$QuestionResult=="NoAnswerInTime"),]
#remove columns we don't need
data_c<-subset(data, select=-c(ProbabilityComment,TimesatmpInitialDirection,InitialDirection,SessionID,Phase,QuestionID,TimeOfHit,NegativeAnswersCount,PositiveAnswersCount,ConvertedValue))
#rename some columns
colnames(data_c)[1]<-"Block"
colnames(data_c)[2]<-"ConditionCode"
colnames(data_c)[6]<-"TrialNumber"
#adding within-staircase trial index column called 'StepNumber'
data_c<-data_c %>% dplyr::group_by(BlockNumber) %>% dplyr::mutate(StepNumber = dplyr::row_number())
#creating a condition_name column
data_c<-data_c %>% mutate(ConditionName = ConditionCode)
#creating a domain column
data_c <- data_c %>% mutate(Domain = ConditionName)
#start making a reversals column
data_c<-data_c%>%mutate(ReversalPoints=QuestionResult)
#adding condition & domain names
data_c<-name_conditions_and_domains(data_c)
View(data_c)
View(data_c)
name_conditions_and_domains(data_c)
df<-name_conditions_and_domains(data_c)
view(df)
View(df)
#read JND output csv filename
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
# save file
file_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
#remove throw away trials (Blocknumber==0)
data<-data[!(data$BlockNumber==0),]
#filter the df so that only staircase rows remain
filter_questions <-data$QuestionID==88
data<-data[filter_questions,]
#filter trials with no answer
data<-data[!(data$QuestionResult=="NoAnswerInTime"),]
#remove columns we don't need
data_c<-subset(data, select=-c(ProbabilityComment,TimesatmpInitialDirection,InitialDirection,SessionID,Phase,QuestionID,TimeOfHit,NegativeAnswersCount,PositiveAnswersCount,ConvertedValue))
#rename some columns
colnames(data_c)[1]<-"Block"
colnames(data_c)[2]<-"ConditionCode"
colnames(data_c)[6]<-"TrialNumber"
#adding within-staircase trial index column called 'StepNumber'
data_c<-data_c %>% dplyr::group_by(BlockNumber) %>% dplyr::mutate(StepNumber = dplyr::row_number())
#creating a condition_name column
data_c<-data_c %>% mutate(ConditionName = ConditionCode)
#creating a domain column
data_c <- data_c %>% mutate(Domain = ConditionName)
#start making a reversals column
data_c<-data_c%>%mutate(ReversalPoints=QuestionResult)
#adding condition & domain names
data_c<-name_conditions_and_domains(data_c)
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
# save file
file_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
######################################## Editing the data frame #########################
#remove throw away trials (Blocknumber==0)
data<-data[!(data$BlockNumber==0),]
#filter the df so that only staircase rows remain
filter_questions <-data$QuestionID==88
data<-data[filter_questions,]
#filter trials with no answer
data<-data[!(data$QuestionResult=="NoAnswerInTime"),]
#remove columns we don't need
data_c<-subset(data, select=-c(ProbabilityComment,TimesatmpInitialDirection,InitialDirection,SessionID,Phase,QuestionID,TimeOfHit,NegativeAnswersCount,PositiveAnswersCount,ConvertedValue))
#rename some columns
colnames(data_c)[1]<-"Block"
colnames(data_c)[2]<-"ConditionCode"
colnames(data_c)[6]<-"TrialNumber"
#adding within-staircase trial index column called 'StepNumber'
data_c<-data_c %>% dplyr::group_by(BlockNumber) %>% dplyr::mutate(StepNumber = dplyr::row_number())
View(data)
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#read JND output csv filename
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
ile_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#read JND output csv filename
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
# save file
file_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#read JND output csv filename
data<-import(here("Studies",study,sub_folder_name,filename_ans))
#check if this is the first attempt at fitting
if (attempt == 1){
data<- data %>% mutate(Attempt = attempt)
}
# save file
file_rename<-gsub(" ","",paste('Attempt_',as.character(attempt),'_',filename_ans))
export(data,here("Studies",study,sub_folder_name,results_folder_name,file_rename))#the file has column names no worries
#saving so we can attach to repeat files
export(data,here("Studies",study,sub_folder_name,filename_ans))
data<-data[!(data$BlockNumber==0),]
#filter the df so that only staircase rows remain
filter_questions <-data$QuestionID==88
data<-data[filter_questions,]
#filter trials with no answer
data<-data[!(data$QuestionResult=="NoAnswerInTime"),]
#remove columns we don't need
data_c<-subset(data, select=-c(ProbabilityComment,TimesatmpInitialDirection,InitialDirection,SessionID,Phase,QuestionID,TimeOfHit,NegativeAnswersCount,PositiveAnswersCount,ConvertedValue))
#rename some columns
colnames(data_c)[1]<-"Block"
colnames(data_c)[2]<-"ConditionCode"
colnames(data_c)[6]<-"TrialNumber"
#adding within-staircase trial index column called 'StepNumber'
data_c<-data_c %>% dplyr::group_by(BlockNumber) %>% dplyr::mutate(StepNumber = dplyr::row_number())
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
study<-"fmri"
sub_folder_name<-"sub_127"
sub_n<-"127"
fitted_file<-gsub(" ","",paste("threshold_values_sub_",sub_n,".csv"))
jnd_thresholds<-import(here("output_matlab",fitted_file))
View(jnd_thresholds)
#set the filename, always take the file called Answers*
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#removing any imaginary parts from the thresholds
jnd_thresholds$my_thresholds_real<-Re(jnd_thresholds$my_thresholds)
#removing any imaginary parts from the thresholds
jnd_thresholds$my_thresholds<-as.numeric(jnd_thresholds$my_thresholds)
jnd_thresholds<-import(here("output_matlab",fitted_file))
as.numeric(jnd_thresholds$my_thresholds)
as.complex(jnd_thresholds$my_thresholds)
Re(as.complex(jnd_thresholds$my_thresholds))
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
source(here("repeat_jnd.R"))
run_unreal_psy()
run_unreal_psy()
sub_n<-"127"
study<-"fmri"
attempt<-2
sub_folder_name<-gsub(" ","",paste("sub_",sub_n))
subject_folder<-here("Studies",study,sub_folder_name)
results_folder_name<-gsub(" ","",paste("results_sub_",sub_n,'_attempt_',as.character(attempt)))
results_folder<-here("Studies",study,sub_folder_name,results_folder_name)
input_folder_name<- gsub(" ","",paste("unreal_input_sub_",sub_n,'_attempt_',as.character(attempt)))
unreal_input_folder<- gsub(" ","",paste(results_folder,"/",input_folder_name))
#list of folder names
folder_names<-list(sub_folder_name,results_folder_name,input_folder_name)
fitted_file<-gsub(" ","",paste("threshold_values_sub_",sub_n,".csv"))
jnd_thresholds<-import(here("output_matlab",fitted_file))
#set the filename, always take the file called Answers*
filename_ans<-list.files(here("Studies",study,sub_folder_name), pattern=glob2rx("Answers*.csv"))[1]
#removing any imaginary parts from the thresholds
jnd_thresholds$my_thresholds<-as.numeric(jnd_thresholds$my_thresholds)
fitted_file<-gsub(" ","",paste("threshold_values_sub_",sub_n,".csv"))
jnd_thresholds<-import(here("output_matlab",fitted_file))
#removing any imaginary parts from the thresholds
jnd_thresholds$my_thresholds_real<-Re(as.complex(jnd_thresholds$my_thresholds))
jnd_thresholds<- jnd_thresholds %>% mutate(Subject = sub_n)
jnd_thresholds<- jnd_thresholds %>% mutate(Study = study)
jnd_thresholds<- jnd_thresholds %>% mutate(Filename = filename_ans)
jnd_thresholds<- jnd_thresholds %>% mutate(Level = prob)
jnd_thresholds$Level[jnd_thresholds$Level==0.25]<-1
jnd_thresholds$Level[jnd_thresholds$Level==0.5]<-2
jnd_thresholds$Level[jnd_thresholds$Level==0.75]<-3
jnd_thresholds$Level[jnd_thresholds$Level==0.95]<-4
#convert thresholds back from log scale
jnd_thresholds$jnd_anti_log<-expm1(jnd_thresholds$my_thresholds_real)
#add max_strength column to jnd_thresholds
jnd_thresholds$max_strength<-jnd_thresholds$my_thresholds_real
for (e in ConditionName_vec){
jnd_thresholds[jnd_thresholds$Condition==e,"max_strength"]<-data_cf[data_cf$ConditionName==e,"max_strength"][[1,1]]
}
View(jnd_thresholds)
ConditionName_vec<-unique(as.vector(jnd_thresholds$Condition))
for (e in ConditionName_vec){
jnd_thresholds[jnd_thresholds$Condition==e,"max_strength"]<-data_cf[data_cf$ConditionName==e,"max_strength"][[1,1]]
}
library(here)
source(here("preprocessing.R"))
source(here("name_conditions_and_domains.R"))
source(here("post_fit_adjustments.R"))
source(here("threshold_fix.R"))
source(here("shift_conditions.R"))
source(here("plot_staircase.R"))
source(here("plot_staircase_unity.R"))
source(here("repeat_list.R"))
source(here("make_plots.R"))
source(here("load_thresholds.R"))
source(here("load_thresholds_fmri.R"))
here(study,sub_folder_name,try(dir.create(results_folder,warn_exists=FALSE),silent=TRUE))
#create subject input folder for next experiment
here(study,sub_folder_name,results_folder,try(dir.create(unreal_input_folder,warn_exists=FALSE),silent=TRUE))
data_cf<-preprocessing(sub_n,study,attempt,sub_folder_name,results_folder_name)
for (e in ConditionName_vec){
jnd_thresholds[jnd_thresholds$Condition==e,"max_strength"]<-data_cf[data_cf$ConditionName==e,"max_strength"][[1,1]]
}
jnd_thresholds$jnd_weighted_threshold<-jnd_thresholds$max_strength
jnd_thresholds$jnd_weighted_threshold<-jnd_thresholds$max_strength*jnd_thresholds$jnd_anti_log/100
return(jnd_thresholds)
jnd_thresholds<-post_fit_adjustments(sub_n,study,attempt,sub_folder_name,results_folder_name,ConditionName_vec,data_cf)
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
run_unreal_psy()
source("C:/Users/User/Desktop/GitHub/psych_gady/unreal_psychophysics/run_unreal_psy.R", echo=TRUE)
run_unreal_psy()
